#!/usr/bin/env bash
#
# Copyright (C) 2025, David J. Rosenbaum <djr7c4@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of version 3 of the GNU General Public License, as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

cleanup() {
    rm "$bootstrap_requirements_file"
}

trap cleanup EXIT

if [[ ! -d ".git" ]]; then
    echo "This script must be run from the top-level of a git repository" >&2
    exit 1
fi

stable_versions() {
    repo="$1"
    git ls-remote "$repo" | awk '{ print $2 }' | sed -n 's:\^{}::; s:^refs/tags/::p' | sort -V | uniq
}

latest_stable() {
    stable_versions "$1" | tail -n 1
}

stp_repo="https://github.com/djr7C4/subtree-package.git"
bootstrap_requirements_file="$(mktemp)"

stp_latest_stable="$(latest_stable "$stp_repo")"

stable() {
    name="$1"
    repo="$2"
    [[ "$stp_latest_stable" ]] || stp_latest_stable="$(latest_stable "$stp_repo")"
    bootstrap_requirements_url="https://github.com/djr7C4/subtree-package/blob/${stp_latest_stable}/bootstrap-requirements"
    [[ -s "$bootstrap_requirements_file" ]] || curl -s "$bootstrap_requirements_url" > "$bootstrap_requirements_file"
    # Get the version from the "Package-Requires" header in stp.el.
    emacs_package_version="$(cat "$bootstrap_requirements_file" | grep "$name")"
    git_tag="$(stable_versions "$repo" | grep "$emacs_package_version")"
    echo "$git_tag"
}

repos=("anaphora https://github.com/rolandwalker/anaphora.git master" "dash https://github.com/magnars/dash.el.git master" "f https://github.com/rejeep/f.el.git master" "memoize https://github.com/djr7C4/emacs-memoize.git master" "s https://github.com/magnars/s.el.git master" "async https://github.com/jwiegley/emacs-async master" "llama https://github.com/tarsius/llama main" "rem https://github.com/djr7C4/rem.git main" "subtree-package https://github.com/djr7C4/subtree-package.git main")

pkg_info_file="stp-pkg-info.eld"

echo "Which version should be installed?"
select update in "latest stable" "recommended stable" "unstable"; do break; done

echo "((packages" > "$pkg_info_file"

for item in "${repos[@]}"; do
    name="$(echo "$item" | cut -d ' ' -f 1)"
    repo="$(echo "$item" | cut -d ' ' -f 2)"
    branch="$(echo "$item" | cut -d ' ' -f 3)"

    if [[ "$update" = "latest stable" ]]; then
        version="$(latest_stable "$repo")"
        branch_cell=""
    elif [[ "$update" = "recommended stable" ]]; then
        # subtree-package isn't in the bootstrap requirements file so it needs
        # to be handled specially.
        if [[ "$name" = "subtree-package" ]]; then
            version="$stp_latest_stable"
        else
            version="$(stable "$name" "$repo")"
        fi

        branch_cell=""
    else
        version="$branch"
        branch_cell=" (branch . \"${branch}\")"
    fi

    git subtree add --prefix "package-source/${name}" --squash "$repo" "$version"
    echo "(\"${name}\" (method . git) (remote . \"${repo}\") (update . ${update})${branch_cell})" >> "$pkg_info_file"
done

echo -e "))\n" >> "$pkg_info_file"
